{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport repositoriesReducer from './repositoriesReducer';\nconst reducers = combineReducers({\n  repositories: repositoriesReducer\n});\nexport default reducers; //Follow official document that is to say\n// Whenever we call that function, it's going to internally call some of our different reducers, give\n// us back some object that has a structure that kind of looks like this right here.\n// So we are making use of a built in helper inside of typescript to say, take this function and give\n// us back the type of whatever that function returns.\n// We're then going to assign that type to Route States Snappily Mouse over RooteState","map":{"version":3,"sources":["/Users/johnny/props/redux-ts/src/state/reducers/index.ts"],"names":["combineReducers","repositoriesReducer","reducers","repositories"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,MAAMC,QAAQ,GAAGF,eAAe,CAAC;AAC/BG,EAAAA,YAAY,EAAEF;AADiB,CAAD,CAAhC;AAIA,eAAeC,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\";\nimport repositoriesReducer from './repositoriesReducer';\n\nconst reducers = combineReducers({\n  repositories: repositoriesReducer\n});\n\nexport default reducers;\n\n\n//Follow official document that is to say\n// Whenever we call that function, it's going to internally call some of our different reducers, give\n// us back some object that has a structure that kind of looks like this right here.\n// So we are making use of a built in helper inside of typescript to say, take this function and give\n// us back the type of whatever that function returns.\n// We're then going to assign that type to Route States Snappily Mouse over RooteState\nexport type RootState = ReturnType<typeof reducers> "]},"metadata":{},"sourceType":"module"}